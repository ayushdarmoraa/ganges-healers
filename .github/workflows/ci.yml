name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  NODE_ENV: test
  AUTH_SECRET: testsecret_please_change
  NEXTAUTH_URL: http://localhost:3000
  RAZORPAY_KEY_ID: test_key
  RAZORPAY_KEY_SECRET: test_secret
  RAZORPAY_WEBHOOK_SECRET: test_webhook
  REDIS_URL: ""

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:unit

  integration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ganges_healers_test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ganges_healers_test
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Prepare DB
        run: |
          pnpm db:test:push
          pnpm db:test:seed
      - run: pnpm test:int

  ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:ui

  build:
    runs-on: ubuntu-latest
    needs: [unit, integration, ui]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next

  e2e:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ganges_healers_test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ganges_healers_test
      E2E_BASE_URL: http://localhost:3000
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Prepare DB
        run: |
          pnpm db:test:push
          pnpm db:test:seed
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: next-build
          path: ./.next
      - name: Start production server
        run: |
          pnpm start & npx wait-on http://localhost:3000
      - name: Run E2E
        run: pnpm test:e2e
